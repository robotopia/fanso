#!/usr/bin/octave -qf


% Usage function
function my_usage()
  disp('usage: fanso FILENAME')
  disp('  FILENAME must be an Octave-produced ASCII file containing')
  disp('  the variables ''dt'', a scalar representing the time between')
  disp('  consecutive data points (in seconds), and ''timeseries'', the')
  disp('  values of the timeseries data points.')
  exit
end % function

% Display online help
function online_help()
  disp('b\tToggle breakpoints mode (init = off). When on, left mouse button')
  disp('\tclicks in the timeseries window will introduce a breakpoint. Right')
  disp('\tclicks will remove the nearest breakpoint.')
  disp('h\tShows this online help.')
end % function

function plot_fft(timeseries)
  figure(2);
  ffted = fft(timeseries);
  absed = abs(ffted);
  plot(absed);
end % function


% Require that we are using the correct graphics toolkit
gtk = 'fltk';
if (~any(strcmp(available_graphics_toolkits(), gtk)))
  disp('This program requires ',gtk,' to be installed.')
  exit
else
  graphics_toolkit(gtk);
end % if

% Parse arguments
if (nargin ~= 1)
  my_usage()
else
  args = argv();
  if (strcmp(args{1},'-h'))
    my_usage()
  else
    filename = args{1};
  end % if
end % if

% Check if file exists
if (exist(filename, 'file') != 2)
  error(['File "',filename,'" doesn''t exist']);
end % if

% Now read in the file contents and plot them
load(filename);

if (~exist('dt', 'var') & ~exist('timeseries', 'var'))
  my_usage()
end % if

figure(1);
N = length(timeseries);
t = [0:(N-1)] * dt;

plot(t, timeseries);
xlabel('Time (s)');
ylabel('Timeseries values');

m = uimenu("label", "FF&T", "accelerator", "F");


[x,y,button] = ginput(1)
